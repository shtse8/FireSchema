name: Main CI (CLI Build & Test)

on:
  push:
    branches:
      - main # Trigger on pushes to main
  pull_request: # Also trigger on PRs

jobs:
  build-and-test-cli: # Renamed job for clarity
    name: Build & Test CLI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: 'recursive' # Checkout submodules

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1

      - name: Install Root Dependencies # Install only root deps
        run: bun install --frozen-lockfile

      # Build only the root package (CLI)
      # Assuming build:root handles this
      - name: Build CLI Package
        run: bun run build:root

      # --- Testing (Optional - depends if root has tests) ---
      # If the root package has tests that DON'T depend on emulator/runtimes:
      # - name: Run Root Tests (if any)
      #   run: bun run test:root # Assuming a separate test script exists

      # --- Docs Build (Keep this here) ---
      - name: Build VitePress site
        run: bun run docs:build # Use bun

      - name: Create tarball artifact (dereference symlinks)
        run: tar -czhf artifact.tar.gz -C docs . # Create tar.gz from ./docs content, dereferencing symlinks

      - name: Upload VitePress build artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages # actions/deploy-pages expects this name by default
          path: artifact.tar.gz # Upload the tarball
          retention-days: 1 # Optional: Keep artifact for 1 day

  # --- Deployment Job (Keep this here) ---
  deploy-docs:
    needs: build-and-test-cli # Depends on the CLI build job
    runs-on: ubuntu-latest
    permissions:
      contents: read # Read permission is sufficient for checkout in build job
      pages: write # Needed by actions/deploy-pages
      id-token: write # Needed by actions/deploy-pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
      # No download needed, deploy-pages handles the artifact directly
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        # artifact_name is implicitly 'github-pages' if not specified and configure-pages is used

# Removed publish-npm and publish-dart jobs.
# These should live in the respective runtime package repositories.