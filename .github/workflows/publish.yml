name: Publish Packages

on:
  push:
    tags:
      # Must align with the tag-pattern configured on pub.dev
      - 'v[0-9]+.[0-9]+.[0-9]+' # Example for tag pattern 'v{{version}}' on pub.dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build all packages
        run: bun run build

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # Or another distribution
          java-version: '11' # Or the version required by the emulator

      - name: Start Firestore Emulator
        run: |
          curl -sL https://firebase.tools | bash
          # Run emulator directly; rely on job termination or timeout + pkill step for cleanup
          firebase emulators:start --only firestore --project=test-project
          # Wait for emulator to start (adjust sleep time if needed)
          sleep 10
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }} # Optional: If needed for other firebase commands

      - name: Run tests (using npx jest due to bun test issues)
        run: npx jest
        env:
           FIRESTORE_EMULATOR_HOST: "localhost:8080" # Ensure tests use the emulator

      - name: Stop Firestore Emulator
        if: always() # Ensure emulator stops even if tests fail
        run: |
          # Find and kill the emulator process
          # This might need adjustment based on how the process runs in CI
          pkill -f firebase || echo "Emulator not running or already stopped."

      - name: Build VitePress site
        run: npm run docs:build # Or use bun run docs:build if preferred

      - name: Upload VitePress build artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages # Artifact name
          path: ./docs # Directory containing VitePress build output (defined in config.mts outDir)
  publish-npm:
    needs: build-and-test # Run after build and test succeed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build all packages # Build again in this job context
        run: bun run build

      - name: Set up Node.js for npm publish
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use a version compatible with your project/npm
          registry-url: 'https://registry.npmjs.org'

      - name: Publish @shtse8/fireschema-ts-client-runtime to npm
        run: cd packages/fireschema-ts-client-runtime && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish @shtse8/fireschema-ts-admin-runtime to npm
        run: cd packages/fireschema-ts-admin-runtime && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish @shtse8/fireschema CLI to npm
        run: npm publish --access public # Assumes root package is the CLI
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Publish Dart package using the official reusable workflow (OIDC)
  publish-dart:
    needs: build-and-test
    permissions:
        id-token: write
    uses: dart-lang/setup-dart/.github/workflows/publish.yml@v1
    with:
        working-directory: ./packages/fireschema_dart_runtime
        # If you configure a GitHub Environment called 'pub.dev' for added protection:
        # environment: pub.dev
        # environment: pub.dev

  deploy-docs:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to push to gh-pages branch
    steps:
      - name: Download VitePress build artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages # Match artifact name from build job
          # No path needed, defaults to workflow run directory

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: . # Deploy the downloaded artifact content from the root
          # Optional: configure user name and email for commit
          # user_name: 'github-actions[bot]'
          # user_email: 'github-actions[bot]@users.noreply.github.com'