name: Release Packages

on:
  push:
    branches:
      - main # Trigger on pushes to main

jobs:
  release:
    name: Build, Test, Version & Publish
    runs-on: ubuntu-latest
    # Add permissions for pushing commits and tags
    permissions:
      contents: write
      id-token: write # For Dart OIDC publish

    steps:
      - name: Checkout code
        # Need fetch-depth: 0 for Changesets versioning based on previous tags
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build all packages
        run: bun run build

      # --- Testing ---
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Start Firestore Emulator
        run: |
          curl -sL https://firebase.tools | bash
          firebase emulators:start --only firestore --project=fireschema-test-emulator &
          sleep 10
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }} # Optional

      - name: Run tests
        # Use npx jest as it seemed more stable in CI, keep flags
        run: npx jest --forceExit --detectOpenHandles --runInBand
        env:
           FIRESTORE_EMULATOR_HOST: "localhost:8080"

      - name: Stop Firestore Emulator
        if: always()
        run: |
          echo "Attempting to stop Firestore emulator..."
          PID=$(lsof -t -i:8080 || echo "")
          if [ -n "$PID" ]; then
            echo "Found emulator process with PID: $PID. Killing..."
            kill $PID || echo "Kill failed, process might have already exited."
            sleep 5
            if kill -0 $PID > /dev/null 2>&1; then
              echo "Process $PID did not terminate, attempting force kill..."
              kill -9 $PID || echo "Force kill failed."
            else
              echo "Emulator process $PID terminated successfully."
            fi
          else
            echo "No process found listening on port 8080."
          fi

      # --- Versioning & Publishing ---
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This command attempts to publish packages to npm
          publish: bun run release
          # This command commits version bumps if publish isn't possible
          version: bun run version:ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # --- Dart Publishing (Conditional) ---
      # Only run if changesets detected a version bump for the dart package
      # We need to check if the pubspec.yaml was modified by the version step

      # TODO: Add step to check if pubspec.yaml was modified
      # TODO: Add step to extract Dart version
      # TODO: Add step to create/push Dart-specific tag
      # TODO: Run Dart publish action

      # --- Docs Deployment (Conditional) ---
      # Only run if changesets detected changes (new versions published)
      - name: Build VitePress site
        if: steps.changesets.outputs.published == 'true'
        run: bun run docs:build # Use bun

      - name: Deploy to GitHub Pages
        if: steps.changesets.outputs.published == 'true'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs