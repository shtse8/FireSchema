name: Publish Packages

on:
  push:
    tags:
      # Must align with the tag-pattern configured on pub.dev
      - 'v[0-9]+.[0-9]+.[0-9]+' # Example for tag pattern 'v{{version}}' on pub.dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build all packages
        run: bun run build

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Start Firestore Emulator
        run: |
          curl -sL https://firebase.tools | bash
          firebase emulators:start --only firestore --project=fireschema-test-emulator &
          sleep 10
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }} # Optional

      - name: Run tests
        # Use npx jest with flags as it seemed most stable in CI
        run: npx jest --forceExit --detectOpenHandles --runInBand
        env:
           FIRESTORE_EMULATOR_HOST: "localhost:8080"

      - name: Stop Firestore Emulator
        if: always()
        run: |
          echo "Attempting to stop Firestore emulator..."
          PID=$(lsof -t -i:8080 || echo "")
          if [ -n "$PID" ]; then
            echo "Found emulator process with PID: $PID. Killing..."
            kill $PID || echo "Kill failed, process might have already exited."
            sleep 5
            if kill -0 $PID > /dev/null 2>&1; then
              echo "Process $PID did not terminate, attempting force kill..."
              kill -9 $PID || echo "Force kill failed."
            else
              echo "Emulator process $PID terminated successfully."
            fi
          else
            echo "No process found listening on port 8080."
          fi

      - name: Build VitePress site
        run: bun run docs:build # Use bun

      - name: Upload VitePress build artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: ./docs

  publish-npm:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build all packages # Build again in this job context
        run: bun run build

      - name: Set up Node.js for npm publish
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Publish @shtse8/fireschema-ts-client-runtime to npm
        run: cd packages/fireschema-ts-client-runtime && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish @shtse8/fireschema-ts-admin-runtime to npm
        run: cd packages/fireschema-ts-admin-runtime && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish @shtse8/fireschema CLI to npm
        run: npm publish --access public # Assumes root package is the CLI
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-dart:
    needs: build-and-test
    permissions:
        id-token: write
    uses: dart-lang/setup-dart/.github/workflows/publish.yml@v1
    with:
        working-directory: ./packages/fireschema_dart_runtime

  deploy-docs:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download VitePress build artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs