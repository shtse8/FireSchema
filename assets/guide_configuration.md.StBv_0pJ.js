import{_ as s,c as a,o as e,ag as t}from"./chunks/framework.Yj-QZn9W.js";const c=JSON.parse('{"title":"Configuration (fireschema.config.json)","description":"","frontmatter":{},"headers":[],"relativePath":"guide/configuration.md","filePath":"guide/configuration.md"}'),n={name:"guide/configuration.md"};function o(l,i,p,r,h,k){return e(),a("div",null,i[0]||(i[0]=[t(`<h1 id="configuration-fireschema-config-json" tabindex="-1">Configuration (<code>fireschema.config.json</code>) <a class="header-anchor" href="#configuration-fireschema-config-json" aria-label="Permalink to &quot;Configuration (\`fireschema.config.json\`)&quot;">​</a></h1><p>The FireSchema generator is configured using a JSON file, typically named <code>fireschema.config.json</code>. This file tells the CLI where to find your schema definition and specifies how and where to generate the code for different target platforms and SDKs.</p><h2 id="example-configuration" tabindex="-1">Example Configuration <a class="header-anchor" href="#example-configuration" aria-label="Permalink to &quot;Example Configuration&quot;">​</a></h2><p>Here&#39;s an example demonstrating common configuration options:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;schema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./firestore.schema.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Required: Path to schema file (relative to this config file)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;outputs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Required: Array of output targets</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;target&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;typescript-client&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Target: TS + Firebase Client SDK (v9+)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;outputDir&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./src/generated/firestore-ts-client&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Output directory (relative to this config file)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;options&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Optional target-specific options</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;dateTimeType&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Timestamp&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // &#39;Timestamp&#39; or &#39;Date&#39; (default: &#39;Timestamp&#39;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;package&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Optional: Generate package.json</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my-project-firestore-ts-client&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;target&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;typescript-admin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Target: TS + Firebase Admin SDK</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;outputDir&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./src/generated/firestore-ts-admin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;options&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;dateTimeType&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Timestamp&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // &quot;package&quot;: { ... }</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Optional package generation</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;target&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dart-client&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Target: Dart + cloud_firestore</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;outputDir&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./lib/generated/firestore_dart&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;options&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Optional Dart options</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;nullSafety&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Generate null-safe code (default: true)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;package&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Optional: Generate pubspec.yaml</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my_project_firestore_dart&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Generated Dart ODM&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Add more targets as needed</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;generatorOptions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Optional global options</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;logLevel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;info&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // &#39;verbose&#39;, &#39;info&#39;, &#39;warn&#39;, &#39;error&#39; (default: &#39;info&#39;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="configuration-options" tabindex="-1">Configuration Options <a class="header-anchor" href="#configuration-options" aria-label="Permalink to &quot;Configuration Options&quot;">​</a></h2><h3 id="schema" tabindex="-1"><code>schema</code> <a class="header-anchor" href="#schema" aria-label="Permalink to &quot;\`schema\`&quot;">​</a></h3><ul><li><strong>(Required, string)</strong></li><li>Specifies the path to your <code>firestore.schema.json</code> file.</li><li><strong>Important:</strong> This path is resolved relative to the location of the <code>fireschema.config.json</code> file itself.</li></ul><h3 id="outputs" tabindex="-1"><code>outputs</code> <a class="header-anchor" href="#outputs" aria-label="Permalink to &quot;\`outputs\`&quot;">​</a></h3><ul><li><p><strong>(Required, array)</strong></p></li><li><p>An array where each object defines a specific code generation target. This allows generating code for multiple platforms (e.g., a TypeScript web frontend and a Dart mobile app) from the single schema definition.</p><p>Each output object contains:</p><ul><li><strong><code>target</code></strong> (Required, string): <ul><li>Identifies the desired language and SDK combination. This determines which internal code generator (adapter) is used and which runtime library the generated code will depend on.</li><li><strong>Supported Values:</strong><ul><li><code>&quot;typescript-client&quot;</code>: For TypeScript projects using the Firebase Client SDK (<code>firebase</code> v9+).</li><li><code>&quot;typescript-admin&quot;</code>: For TypeScript projects using the Firebase Admin SDK (<code>firebase-admin</code>).</li><li><code>&quot;dart-client&quot;</code>: For Dart/Flutter projects using the <code>cloud_firestore</code> package.</li></ul></li><li><em>(More targets may be added in the future).</em></li></ul></li><li><strong><code>outputDir</code></strong> (Required, string): <ul><li>The directory where the generated code for this specific target will be placed.</li><li><strong>Important:</strong> This path is also resolved relative to the location of the <code>fireschema.config.json</code> file.</li></ul></li><li><strong><code>options</code></strong> (Optional, object): <ul><li>Provides language/target-specific generation settings.</li><li><strong>TypeScript Client/Admin Options:</strong><ul><li><code>dateTimeType</code> (Optional, string, default: <code>&quot;Timestamp&quot;</code>): Controls the type generated for <code>timestamp</code> fields. <ul><li><code>&quot;Timestamp&quot;</code>: Uses Firestore <code>Timestamp</code> (from <code>firebase/firestore</code> or <code>firebase-admin/firestore</code>). Recommended for direct Firestore interaction.</li><li><code>&quot;Date&quot;</code>: Uses the standard JavaScript <code>Date</code> object. Requires manual conversion when reading/writing to Firestore.</li></ul></li></ul></li><li><strong>Dart Client Options:</strong><ul><li><code>nullSafety</code> (Optional, boolean, default: <code>true</code>): Determines whether to generate null-safe Dart code (highly recommended).</li></ul></li></ul></li><li><strong><code>package</code></strong> (Optional, object): <ul><li>If provided, FireSchema generates a basic package manifest file (<code>package.json</code> for TS, <code>pubspec.yaml</code> for Dart) within the <code>outputDir</code>.</li><li>This is useful if you want to treat the generated code as a distinct, importable package within a monorepo or for separate publishing.</li><li>Requires at least a <code>name</code> property: <ul><li><code>name</code> (Required, string): The name for the generated package.</li><li><code>version</code> (Optional, string, default: <code>&quot;0.1.0&quot;</code>): The package version.</li><li><code>description</code> (Optional, string): A description for the package.</li></ul></li></ul></li></ul></li></ul><h3 id="generatoroptions" tabindex="-1"><code>generatorOptions</code> <a class="header-anchor" href="#generatoroptions" aria-label="Permalink to &quot;\`generatorOptions\`&quot;">​</a></h3><ul><li><strong>(Optional, object)</strong></li><li>Global options affecting the generator&#39;s overall behavior. <ul><li><code>logLevel</code> (Optional, string, default: <code>&quot;info&quot;</code>): Controls the amount of information logged to the console during generation. <ul><li>Supported values: <code>&quot;verbose&quot;</code>, <code>&quot;info&quot;</code>, <code>&quot;warn&quot;</code>, <code>&quot;error&quot;</code>.</li></ul></li></ul></li></ul>`,12)]))}const u=s(n,[["render",o]]);export{c as __pageData,u as default};
