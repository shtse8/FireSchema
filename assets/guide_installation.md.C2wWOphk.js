import{_ as a,c as i,o as e,ag as n}from"./chunks/framework.Yj-QZn9W.js";const k=JSON.parse('{"title":"Installation","description":"","frontmatter":{},"headers":[],"relativePath":"guide/installation.md","filePath":"guide/installation.md"}'),t={name:"guide/installation.md"};function l(r,s,p,h,o,d){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h1><p>This guide covers how to install the FireSchema CLI tool and the necessary runtime libraries for your project.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>Node.js (LTS version recommended) and npm (or Bun, Yarn, pnpm) for running the CLI tool.</li><li>For TypeScript targets: An existing TypeScript project with the relevant Firebase SDK (<code>firebase</code> for client, <code>firebase-admin</code> for admin) installed.</li><li>For Dart targets: An existing Dart/Flutter project with the <code>cloud_firestore</code> package installed.</li></ul><h2 id="installation-steps" tabindex="-1">Installation Steps <a class="header-anchor" href="#installation-steps" aria-label="Permalink to &quot;Installation Steps&quot;">​</a></h2><p>FireSchema consists of two main parts that need installation:</p><ol><li><strong>The CLI Tool (<code>@shtse8/fireschema</code>):</strong> This is the command-line application you run to generate code. Install this once, either globally or as a dev dependency.</li><li><strong>Runtime Libraries (<code>@shtse8/fireschema-ts-*-runtime</code>, <code>fireschema_dart_runtime</code>):</strong> These are packages containing base classes/helpers that the <em>generated code</em> depends on. Install the appropriate runtime library <strong>in the specific project where you will use the generated code</strong>.</li></ol><h3 id="step-1-install-fireschema-cli" tabindex="-1">Step 1: Install FireSchema CLI <a class="header-anchor" href="#step-1-install-fireschema-cli" aria-label="Permalink to &quot;Step 1: Install FireSchema CLI&quot;">​</a></h3><p>Choose one of the following methods:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install globally (recommended for easy access from anywhere)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @shtse8/fireschema</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># --- OR ---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install as a dev dependency in your project&#39;s root</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @shtse8/fireschema</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># (or yarn add --dev @shtse8/fireschema, pnpm add -D @shtse8/fireschema, bun add -d @shtse8/fireschema)</span></span></code></pre></div><h3 id="step-2-install-runtime-library-libraries" tabindex="-1">Step 2: Install Runtime Library/Libraries <a class="header-anchor" href="#step-2-install-runtime-library-libraries" aria-label="Permalink to &quot;Step 2: Install Runtime Library/Libraries&quot;">​</a></h3><p>Install the necessary runtime library <strong>in the project where the generated code will live</strong>:</p><p><strong>For TypeScript (Client SDK):</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># In your frontend/web project directory:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @shtse8/fireschema-ts-client-runtime</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ensure you also have the Firebase JS SDK (v9+):</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firebase</span></span></code></pre></div><p><strong>For TypeScript (Admin SDK):</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># In your backend/Node.js project directory:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @shtse8/fireschema-ts-admin-runtime</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ensure you also have the Firebase Admin SDK:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firebase-admin</span></span></code></pre></div><p><strong>For Dart/Flutter (Client SDK):</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># In your Dart/Flutter project directory:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fireschema_dart_runtime</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Or for Flutter:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># flutter pub add fireschema_dart_runtime</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ensure you also have cloud_firestore:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cloud_firestore</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Or for Flutter:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># flutter pub add cloud_firestore</span></span></code></pre></div><p>With the CLI and the appropriate runtime(s) installed, you are ready to define your schema, configure outputs, and generate code. Proceed to the <a href="./schema-definition.html">Schema Definition</a> and <a href="./configuration.html">Configuration</a> guides.</p>`,19)]))}const g=a(t,[["render",l]]);export{k as __pageData,g as default};
