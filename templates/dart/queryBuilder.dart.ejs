/**
 * Generated by firestore-odm
 * Do not edit manually.
 */
import 'package:cloud_firestore/cloud_firestore.dart';
// Runtime Imports
import 'package:fireschema_dart_runtime/fireschema_dart_runtime.dart'; // Import the runtime package

// Local Imports
import '<%= fileNameBase %>_data.dart';

/// A typed query builder for the '<%- collection.collectionId %>' collection, extending BaseQueryBuilder.
class <%- modelName %>QueryBuilder extends BaseQueryBuilder<<%- modelName %>Data> {

  /// Creates a <%- modelName %>QueryBuilder instance.
  <%- modelName %>QueryBuilder({
    required FirebaseFirestore firestore,
    required CollectionReference<<%- modelName %>Data> collectionRef,
  }) : super(firestore: firestore, collectionRef: collectionRef);

  // Constructor and internal query state are inherited from BaseQueryBuilder

  // --- Field-specific Where Methods ---
<% Object.values(collection.fields).forEach(field => { -%>
<%   const queryInfos = getDartQueryInfoForField(field, options); -%>
<%   if (queryInfos.length > 0) { -%>
  /// Adds a query filter for the '<%- field.fieldName %>' field.
  /// Provide one of the named parameters to specify the query condition.
  <%- modelName %>QueryBuilder where<%- capitalizeFirstLetter(field.fieldName) %>({
<%   queryInfos.forEach(info => { -%>
    <%- info.valueType %> <%- info.paramName %>,
<%   }); -%>
  }) {
    // Call the protected where method from the base class
    return where(
      '<%- field.fieldName %>', // Pass the field path string
<%   queryInfos.forEach(info => { -%>
      <%- info.paramName %>: <%- info.paramName %>,
<%   }); -%>
    ) as <%- modelName %>QueryBuilder; // Cast back to specific type
  }
<%   } -%>
<% }); -%>
  // --- End Field-specific Where Methods ---

  // Methods like orderBy(), limit(), limitToLast(), startAt(), startAfter(),
  // endBefore(), endAt(), get(), getData() are inherited from BaseQueryBuilder.

  // --- Custom Query Methods Placeholder ---
}