/**
 * Generated by firestore-odm
 * Do not edit manually.
 */
import {
  Firestore,
  CollectionReference,
  // Query, // Handled by base class
  // QueryConstraint, // Handled by base class
  // query, // Handled by base class
  // where as firestoreWhere, // Handled by base class _where
  // orderBy, // Handled by base class
  // limit, // Handled by base class
  // getDocs, // Handled by base class get() / getSnapshot()
  // limitToLast, // Handled by base class
  // startAt, // Handled by base class
  // startAfter, // Handled by base class
  // endAt, // Handled by base class
  // endBefore, // Handled by base class
  DocumentSnapshot, // Needed for cursor method signatures in base class
  WhereFilterOp, // Needed for where method signatures
  OrderByDirection, // Needed for orderBy signature in base class
} from 'firebase/firestore';
// Runtime Imports
import { BaseQueryBuilder } from '@fireschema/ts-runtime'; // Adjust path/package name as needed

// Local Imports
import { <%- modelName %>Data } from './<%- collection.collectionId %>.types';

/**
 * A typed query builder for the '<%- collection.collectionId %>' collection, extending BaseQueryBuilder.
 */
export class <%- modelName %>QueryBuilder extends BaseQueryBuilder<<%- modelName %>Data> {

  // Constructor is inherited from BaseQueryBuilder

  // --- Field-specific Where Methods ---
<% Object.values(collection.fields).forEach(field => { -%>
<%   const queryInfos = getQueryInfoForField(field, options); -%>
<%   if (queryInfos.length > 0) { -%>
  // Overloads for '<%- field.fieldName %>' field type safety based on operator
<%   queryInfos.forEach(info => { -%>
  where<%- capitalizeFirstLetter(field.fieldName) %>(op: '<%- info.op %>', value: <%- info.valueType %>): this;
<%   }); -%>
  // Implementation signature for '<%- field.fieldName %>'
  where<%- capitalizeFirstLetter(field.fieldName) %>(
    op: WhereFilterOp, // Use WhereFilterOp for implementation signature
    value: any   // Use any for implementation signature
  ): this {
    // Call the protected _where method from the base class
    return this._where('<%- field.fieldName %>', op, value);
  }
<%   } -%>
<% }); -%>
  // --- End Field-specific Where Methods ---

  // Methods like orderBy(), limit(), limitToLast(), startAt(), startAfter(),
  // endBefore(), endAt(), get(), getSnapshot() are inherited from BaseQueryBuilder.

  // --- Custom Query Methods Placeholder ---
  // Example: findByStatus(status: string) { return this._where('status', '==', status); }
}