/**
 * Generated by firestore-odm
 * Do not edit manually.
 */
import {
  Firestore,
  CollectionReference,
  // Query, // Handled by base class
  // QueryConstraint, // Handled by base class
  // query, // Handled by base class
  // where as firestoreWhere, // Handled by base class _where
  // orderBy, // Handled by base class
  // limit, // Handled by base class
  // getDocs, // Handled by base class get() / getSnapshot()
  // limitToLast, // Handled by base class
  // startAt, // Handled by base class
  // startAfter, // Handled by base class
  // endAt, // Handled by base class
  // endBefore, // Handled by base class
  DocumentSnapshot, // Needed for cursor method signatures in base class
  WhereFilterOp, // Needed for where method signatures
  OrderByDirection, // Needed for orderBy signature in base class
  Timestamp,        // Needed for timestamp field queries
  DocumentReference // Needed for reference field queries
} from 'firebase/firestore';
// Runtime Imports
import { BaseQueryBuilder } from '@shtse8/fireschema-runtime'; // Adjust path/package name as needed

// Local Imports
import { AddressesData } from './addresses.types.js';











/**
 * A typed query builder for the 'addresses' collection, extending BaseQueryBuilder.
 */
export class AddressesQueryBuilder extends BaseQueryBuilder<AddressesData> {

  // Constructor is inherited from BaseQueryBuilder

  // --- Field-specific Where Methods ---
  // Overloads for 'street' field type safety based on operator
  whereStreet(op: '==', value: string): this;
  whereStreet(op: '!=', value: string): this;
  whereStreet(op: '<', value: string): this;
  whereStreet(op: '<=', value: string): this;
  whereStreet(op: '>', value: string): this;
  whereStreet(op: '>=', value: string): this;
  whereStreet(op: 'in', value: string[]): this;
  whereStreet(op: 'not-in', value: string[]): this;
  // Implementation signature for 'street'
  whereStreet(
    op: WhereFilterOp, // Use WhereFilterOp for implementation signature
    value: any   // Use any for implementation signature
  ): this {
    // Call the protected _where method from the base class
    return this._where('street', op, value);
  }
  // Overloads for 'city' field type safety based on operator
  whereCity(op: '==', value: string): this;
  whereCity(op: '!=', value: string): this;
  whereCity(op: '<', value: string): this;
  whereCity(op: '<=', value: string): this;
  whereCity(op: '>', value: string): this;
  whereCity(op: '>=', value: string): this;
  whereCity(op: 'in', value: string[]): this;
  whereCity(op: 'not-in', value: string[]): this;
  // Implementation signature for 'city'
  whereCity(
    op: WhereFilterOp, // Use WhereFilterOp for implementation signature
    value: any   // Use any for implementation signature
  ): this {
    // Call the protected _where method from the base class
    return this._where('city', op, value);
  }
  // Overloads for 'zip' field type safety based on operator
  whereZip(op: '==', value: string): this;
  whereZip(op: '!=', value: string): this;
  whereZip(op: '<', value: string): this;
  whereZip(op: '<=', value: string): this;
  whereZip(op: '>', value: string): this;
  whereZip(op: '>=', value: string): this;
  whereZip(op: 'in', value: string[]): this;
  whereZip(op: 'not-in', value: string[]): this;
  // Implementation signature for 'zip'
  whereZip(
    op: WhereFilterOp, // Use WhereFilterOp for implementation signature
    value: any   // Use any for implementation signature
  ): this {
    // Call the protected _where method from the base class
    return this._where('zip', op, value);
  }
  // --- End Field-specific Where Methods ---

  // Methods like orderBy(), limit(), limitToLast(), startAt(), startAfter(),
  // endBefore(), endAt(), get(), getSnapshot() are inherited from BaseQueryBuilder.

  // --- Custom Query Methods Placeholder ---
  // Example: findByStatus(status: string) { return this._where('status', '==', status); }
}