/**
 * Generated by firestore-odm
 * Do not edit manually.
 */

// Runtime Imports - Base class and generic types
import { BaseUpdateBuilder } from '@shtse8/fireschema-runtime'; // Correct package name
import type { DocumentReferenceLike, FieldValueLike, TimestampLike, GeoPointLike } from '@shtse8/fireschema-runtime'; // Import generic types

// Local Imports
import { UsersData } from './users.types.js';

























import type { AddressesData } from './addresses.types.js';


/**
 * A typed builder for creating update operations for 'users' documents, extending BaseUpdateBuilder.
 */
export class UsersUpdateBuilder extends BaseUpdateBuilder<UsersData> {

  // Constructor inherited from BaseUpdateBuilder (accepts DocumentReferenceLike)

  // --- Field Setters ---






  /** Sets the value for the 'displayName' field. */
  setDisplayName(value: string | FieldValueLike): this { // method.fieldType includes FieldValueLike
    return this._set('displayName', value);
  }











  /** Sets the value for the 'email' field. */
  setEmail(value: string | FieldValueLike): this { // method.fieldType includes FieldValueLike
    return this._set('email', value);
  }











  /** Sets the value for the 'createdAt' field. */
  setCreatedAt(value: TimestampLike | FieldValueLike): this { // method.fieldType includes FieldValueLike
    return this._set('createdAt', value);
  }





  /** Sets the 'createdAt' field to the server timestamp. */
  setCreatedAtToServerTimestamp(): this {
    return this._serverTimestamp('createdAt');
  }


  /** Deletes the 'createdAt' field. */
  deleteCreatedAt(): this {
    return this._deleteField('createdAt');
  }






  /** Sets the value for the 'lastLogin' field. */
  setLastLogin(value: TimestampLike | FieldValueLike): this { // method.fieldType includes FieldValueLike
    return this._set('lastLogin', value);
  }






  /** Deletes the 'lastLogin' field. */
  deleteLastLogin(): this {
    return this._deleteField('lastLogin');
  }






  /** Sets the value for the 'age' field. */
  setAge(value: number | FieldValueLike): this { // method.fieldType includes FieldValueLike
    return this._set('age', value);
  }



  /** Atomically increments the 'age' field. */
  incrementAge(value: number): this {
    return this._increment('age', value);
  }




  /** Deletes the 'age' field. */
  deleteAge(): this {
    return this._deleteField('age');
  }






  /** Sets the value for the 'isActive' field. */
  setIsActive(value: boolean | FieldValueLike): this { // method.fieldType includes FieldValueLike
    return this._set('isActive', value);
  }






  /** Deletes the 'isActive' field. */
  deleteIsActive(): this {
    return this._deleteField('isActive');
  }






  /** Sets the value for the 'settings' field. */
  setSettings(value: { theme?: string; notificationsEnabled?: boolean } | FieldValueLike): this { // method.fieldType includes FieldValueLike
    return this._set('settings', value);
  }






  /** Deletes the 'settings' field. */
  deleteSettings(): this {
    return this._deleteField('settings');
  }






  /** Sets the value for the 'settings.theme' field. */
  setSettingsTheme(value: string | FieldValueLike): this { // method.fieldType includes FieldValueLike
    return this._set('settings.theme', value);
  }






  /** Deletes the 'settings.theme' field. */
  deleteSettingsTheme(): this {
    return this._deleteField('settings.theme');
  }






  /** Sets the value for the 'settings.notificationsEnabled' field. */
  setSettingsNotificationsEnabled(value: boolean | FieldValueLike): this { // method.fieldType includes FieldValueLike
    return this._set('settings.notificationsEnabled', value);
  }






  /** Deletes the 'settings.notificationsEnabled' field. */
  deleteSettingsNotificationsEnabled(): this {
    return this._deleteField('settings.notificationsEnabled');
  }






  /** Sets the value for the 'tags' field. */
  setTags(value: string[] | FieldValueLike): this { // method.fieldType includes FieldValueLike
    return this._set('tags', value);
  }





  /** Atomically adds elements to the 'tags' array field. */
  arrayUnionTags(values: string[] | string): this {
    return this._arrayUnion('tags', Array.isArray(values) ? values : [values]);
  }

  /** Atomically removes elements from the 'tags' array field. */
  arrayRemoveTags(values: string[] | string): this {
    return this._arrayRemove('tags', Array.isArray(values) ? values : [values]);
  }



  /** Deletes the 'tags' field. */
  deleteTags(): this {
    return this._deleteField('tags');
  }






  /** Sets the value for the 'primaryAddressRef' field. */
  setPrimaryAddressRef(value: DocumentReferenceLike<AddressesData> | FieldValueLike): this { // method.fieldType includes FieldValueLike
    return this._set('primaryAddressRef', value);
  }






  /** Deletes the 'primaryAddressRef' field. */
  deletePrimaryAddressRef(): this {
    return this._deleteField('primaryAddressRef');
  }



  // --- End Field Setters ---

  // commit() method is inherited from BaseUpdateBuilder

  // --- Custom Update Methods Placeholder ---
}