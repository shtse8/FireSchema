/**
 * Generated by firestore-odm
 * Do not edit manually.
 */
import {
  Firestore,
  CollectionReference,
  // Query, // Handled by base class
  // QueryConstraint, // Handled by base class
  // query, // Handled by base class
  // where as firestoreWhere, // Handled by base class _where
  // orderBy, // Handled by base class
  // limit, // Handled by base class
  // getDocs, // Handled by base class get() / getSnapshot()
  // limitToLast, // Handled by base class
  // startAt, // Handled by base class
  // startAfter, // Handled by base class
  // endAt, // Handled by base class
  // endBefore, // Handled by base class
  DocumentSnapshot, // Needed for cursor method signatures in base class
  WhereFilterOp, // Needed for where method signatures
  OrderByDirection, // Needed for orderBy signature in base class
  Timestamp,        // Needed for timestamp field queries
  DocumentReference // Needed for reference field queries
} from 'firebase/firestore';
// Runtime Imports
import { BaseQueryBuilder } from '@fireschema/ts-runtime'; // Adjust path/package name as needed

// Local Imports
import { UsersData } from './users.types.js';

























import type { AddressesData } from './addresses.types.js';


/**
 * A typed query builder for the 'users' collection, extending BaseQueryBuilder.
 */
export class UsersQueryBuilder extends BaseQueryBuilder<UsersData> {

  // Constructor is inherited from BaseQueryBuilder

  // --- Field-specific Where Methods ---
  // Overloads for 'displayName' field type safety based on operator
  whereDisplayName(op: '==', value: string): this;
  whereDisplayName(op: '!=', value: string): this;
  whereDisplayName(op: '<', value: string): this;
  whereDisplayName(op: '<=', value: string): this;
  whereDisplayName(op: '>', value: string): this;
  whereDisplayName(op: '>=', value: string): this;
  whereDisplayName(op: 'in', value: string[]): this;
  whereDisplayName(op: 'not-in', value: string[]): this;
  // Implementation signature for 'displayName'
  whereDisplayName(
    op: WhereFilterOp, // Use WhereFilterOp for implementation signature
    value: any   // Use any for implementation signature
  ): this {
    // Call the protected _where method from the base class
    return this._where('displayName', op, value);
  }
  // Overloads for 'email' field type safety based on operator
  whereEmail(op: '==', value: string): this;
  whereEmail(op: '!=', value: string): this;
  whereEmail(op: '<', value: string): this;
  whereEmail(op: '<=', value: string): this;
  whereEmail(op: '>', value: string): this;
  whereEmail(op: '>=', value: string): this;
  whereEmail(op: 'in', value: string[]): this;
  whereEmail(op: 'not-in', value: string[]): this;
  // Implementation signature for 'email'
  whereEmail(
    op: WhereFilterOp, // Use WhereFilterOp for implementation signature
    value: any   // Use any for implementation signature
  ): this {
    // Call the protected _where method from the base class
    return this._where('email', op, value);
  }
  // Overloads for 'createdAt' field type safety based on operator
  whereCreatedAt(op: '==', value: Timestamp): this;
  whereCreatedAt(op: '!=', value: Timestamp): this;
  whereCreatedAt(op: '<', value: Timestamp): this;
  whereCreatedAt(op: '<=', value: Timestamp): this;
  whereCreatedAt(op: '>', value: Timestamp): this;
  whereCreatedAt(op: '>=', value: Timestamp): this;
  whereCreatedAt(op: 'in', value: Timestamp[]): this;
  whereCreatedAt(op: 'not-in', value: Timestamp[]): this;
  // Implementation signature for 'createdAt'
  whereCreatedAt(
    op: WhereFilterOp, // Use WhereFilterOp for implementation signature
    value: any   // Use any for implementation signature
  ): this {
    // Call the protected _where method from the base class
    return this._where('createdAt', op, value);
  }
  // Overloads for 'lastLogin' field type safety based on operator
  whereLastLogin(op: '==', value: Timestamp): this;
  whereLastLogin(op: '!=', value: Timestamp): this;
  whereLastLogin(op: '<', value: Timestamp): this;
  whereLastLogin(op: '<=', value: Timestamp): this;
  whereLastLogin(op: '>', value: Timestamp): this;
  whereLastLogin(op: '>=', value: Timestamp): this;
  whereLastLogin(op: 'in', value: Timestamp[]): this;
  whereLastLogin(op: 'not-in', value: Timestamp[]): this;
  // Implementation signature for 'lastLogin'
  whereLastLogin(
    op: WhereFilterOp, // Use WhereFilterOp for implementation signature
    value: any   // Use any for implementation signature
  ): this {
    // Call the protected _where method from the base class
    return this._where('lastLogin', op, value);
  }
  // Overloads for 'age' field type safety based on operator
  whereAge(op: '==', value: number): this;
  whereAge(op: '!=', value: number): this;
  whereAge(op: '<', value: number): this;
  whereAge(op: '<=', value: number): this;
  whereAge(op: '>', value: number): this;
  whereAge(op: '>=', value: number): this;
  whereAge(op: 'in', value: number[]): this;
  whereAge(op: 'not-in', value: number[]): this;
  // Implementation signature for 'age'
  whereAge(
    op: WhereFilterOp, // Use WhereFilterOp for implementation signature
    value: any   // Use any for implementation signature
  ): this {
    // Call the protected _where method from the base class
    return this._where('age', op, value);
  }
  // Overloads for 'isActive' field type safety based on operator
  whereIsActive(op: '==', value: boolean): this;
  whereIsActive(op: '!=', value: boolean): this;
  whereIsActive(op: '<', value: boolean): this;
  whereIsActive(op: '<=', value: boolean): this;
  whereIsActive(op: '>', value: boolean): this;
  whereIsActive(op: '>=', value: boolean): this;
  whereIsActive(op: 'in', value: boolean[]): this;
  whereIsActive(op: 'not-in', value: boolean[]): this;
  // Implementation signature for 'isActive'
  whereIsActive(
    op: WhereFilterOp, // Use WhereFilterOp for implementation signature
    value: any   // Use any for implementation signature
  ): this {
    // Call the protected _where method from the base class
    return this._where('isActive', op, value);
  }
  // Overloads for 'settings' field type safety based on operator
  whereSettings(op: '==', value: { theme?: string; notificationsEnabled?: boolean }): this;
  whereSettings(op: '!=', value: { theme?: string; notificationsEnabled?: boolean }): this;
  whereSettings(op: 'in', value: { theme?: string; notificationsEnabled?: boolean }[]): this;
  whereSettings(op: 'not-in', value: { theme?: string; notificationsEnabled?: boolean }[]): this;
  // Implementation signature for 'settings'
  whereSettings(
    op: WhereFilterOp, // Use WhereFilterOp for implementation signature
    value: any   // Use any for implementation signature
  ): this {
    // Call the protected _where method from the base class
    return this._where('settings', op, value);
  }
  // Overloads for 'tags' field type safety based on operator
  whereTags(op: 'array-contains', value: string): this;
  whereTags(op: 'array-contains-any', value: string[]): this;
  whereTags(op: 'in', value: string[][]): this;
  whereTags(op: 'not-in', value: string[][]): this;
  // Implementation signature for 'tags'
  whereTags(
    op: WhereFilterOp, // Use WhereFilterOp for implementation signature
    value: any   // Use any for implementation signature
  ): this {
    // Call the protected _where method from the base class
    return this._where('tags', op, value);
  }
  // Overloads for 'primaryAddressRef' field type safety based on operator
  wherePrimaryAddressRef(op: '==', value: DocumentReference<AddressesData>): this;
  wherePrimaryAddressRef(op: '!=', value: DocumentReference<AddressesData>): this;
  wherePrimaryAddressRef(op: '<', value: DocumentReference<AddressesData>): this;
  wherePrimaryAddressRef(op: '<=', value: DocumentReference<AddressesData>): this;
  wherePrimaryAddressRef(op: '>', value: DocumentReference<AddressesData>): this;
  wherePrimaryAddressRef(op: '>=', value: DocumentReference<AddressesData>): this;
  wherePrimaryAddressRef(op: 'in', value: DocumentReference<AddressesData>[]): this;
  wherePrimaryAddressRef(op: 'not-in', value: DocumentReference<AddressesData>[]): this;
  // Implementation signature for 'primaryAddressRef'
  wherePrimaryAddressRef(
    op: WhereFilterOp, // Use WhereFilterOp for implementation signature
    value: any   // Use any for implementation signature
  ): this {
    // Call the protected _where method from the base class
    return this._where('primaryAddressRef', op, value);
  }
  // --- End Field-specific Where Methods ---

  // Methods like orderBy(), limit(), limitToLast(), startAt(), startAfter(),
  // endBefore(), endAt(), get(), getSnapshot() are inherited from BaseQueryBuilder.

  // --- Custom Query Methods Placeholder ---
  // Example: findByStatus(status: string) { return this._where('status', '==', status); }
}