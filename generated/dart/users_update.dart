/**
 * Generated by firestore-odm
 * Do not edit manually.
 */
import 'package:cloud_firestore/cloud_firestore.dart';
// Runtime Imports
import 'package:fireschema_dart_runtime/fireschema_dart_runtime.dart'; // Import the runtime package

// Local Imports
import 'users_data.dart';

/// A typed builder for creating update operations for 'users' documents, extending BaseUpdateBuilder.
class UsersUpdateBuilder extends BaseUpdateBuilder<UsersData> {

  /// Creates a UsersUpdateBuilder instance.
  UsersUpdateBuilder({required DocumentReference<UsersData> docRef})
      : super(docRef: docRef);

  // Constructor and internal updateData map are inherited from BaseUpdateBuilder

  // --- Field Setters ---
  /// Sets the value for the 'displayName' field.
  UsersUpdateBuilder setDisplayName(String value) {
    // Call the protected set method from the base class
    return set('displayName', value) as UsersUpdateBuilder; // Cast back
  }


  /// Sets the value for the 'email' field.
  UsersUpdateBuilder setEmail(String value) {
    // Call the protected set method from the base class
    return set('email', value) as UsersUpdateBuilder; // Cast back
  }


  /// Sets the value for the 'createdAt' field.
  UsersUpdateBuilder setCreatedAt(Timestamp? value) {
    // Call the protected set method from the base class
    return set('createdAt', value) as UsersUpdateBuilder; // Cast back
  }

  /// Sets the 'createdAt' field to the server timestamp.
  UsersUpdateBuilder setCreatedAtToServerTimestamp() {
    // Call the protected serverTimestamp helper
    return serverTimestamp('createdAt') as UsersUpdateBuilder; // Cast back
  }
  /// Deletes the 'createdAt' field.
  UsersUpdateBuilder deleteCreatedAt() {
    // Call the protected deleteField helper
    return deleteField('createdAt') as UsersUpdateBuilder; // Cast back
  }

  /// Sets the value for the 'lastLogin' field.
  UsersUpdateBuilder setLastLogin(Timestamp? value) {
    // Call the protected set method from the base class
    return set('lastLogin', value) as UsersUpdateBuilder; // Cast back
  }

  /// Deletes the 'lastLogin' field.
  UsersUpdateBuilder deleteLastLogin() {
    // Call the protected deleteField helper
    return deleteField('lastLogin') as UsersUpdateBuilder; // Cast back
  }

  /// Sets the value for the 'age' field.
  UsersUpdateBuilder setAge(num? value) {
    // Call the protected set method from the base class
    return set('age', value) as UsersUpdateBuilder; // Cast back
  }

  /// Atomically increments the 'age' field by the given value.
  UsersUpdateBuilder incrementAge(num value) {
    // Call the protected increment helper
    return increment('age', value) as UsersUpdateBuilder; // Cast back
  }
  /// Deletes the 'age' field.
  UsersUpdateBuilder deleteAge() {
    // Call the protected deleteField helper
    return deleteField('age') as UsersUpdateBuilder; // Cast back
  }

  /// Sets the value for the 'isActive' field.
  UsersUpdateBuilder setIsActive(bool? value) {
    // Call the protected set method from the base class
    return set('isActive', value) as UsersUpdateBuilder; // Cast back
  }

  /// Deletes the 'isActive' field.
  UsersUpdateBuilder deleteIsActive() {
    // Call the protected deleteField helper
    return deleteField('isActive') as UsersUpdateBuilder; // Cast back
  }

  /// Sets the value for the 'settings' field.
  UsersUpdateBuilder setSettings(Map<String, dynamic>? value) {
    // Call the protected set method from the base class
    return set('settings', value) as UsersUpdateBuilder; // Cast back
  }

  /// Deletes the 'settings' field.
  UsersUpdateBuilder deleteSettings() {
    // Call the protected deleteField helper
    return deleteField('settings') as UsersUpdateBuilder; // Cast back
  }

  /// Sets the value for the 'tags' field.
  UsersUpdateBuilder setTags(List<String>? value) {
    // Call the protected set method from the base class
    return set('tags', value) as UsersUpdateBuilder; // Cast back
  }

  /// Atomically adds elements to the 'tags' array field.
  UsersUpdateBuilder arrayUnionTags(List<String> values) {
    // Call the protected arrayUnion helper
    return arrayUnion('tags', values) as UsersUpdateBuilder; // Cast back
  }

  /// Atomically removes elements from the 'tags' array field.
  UsersUpdateBuilder arrayRemoveTags(List<String> values) {
    // Call the protected arrayRemove helper
    return arrayRemove('tags', values) as UsersUpdateBuilder; // Cast back
  }
  /// Deletes the 'tags' field.
  UsersUpdateBuilder deleteTags() {
    // Call the protected deleteField helper
    return deleteField('tags') as UsersUpdateBuilder; // Cast back
  }

  /// Sets the value for the 'primaryAddressRef' field.
  UsersUpdateBuilder setPrimaryAddressRef(DocumentReference<Map<String, dynamic>>? value) {
    // Call the protected set method from the base class
    return set('primaryAddressRef', value) as UsersUpdateBuilder; // Cast back
  }

  /// Deletes the 'primaryAddressRef' field.
  UsersUpdateBuilder deletePrimaryAddressRef() {
    // Call the protected deleteField helper
    return deleteField('primaryAddressRef') as UsersUpdateBuilder; // Cast back
  }

  // --- End Field Setters ---

  // commit() method is inherited from BaseUpdateBuilder

  // --- Custom Update Methods Placeholder ---
}